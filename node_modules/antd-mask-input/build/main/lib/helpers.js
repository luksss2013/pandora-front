"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
let KEYCODE_Z = 90;
let KEYCODE_Y = 89;
function isUndo(e) {
    return (e.ctrlKey || e.metaKey) && e.keyCode === (e.shiftKey ? KEYCODE_Y : KEYCODE_Z);
}
exports.isUndo = isUndo;
function isRedo(e) {
    return (e.ctrlKey || e.metaKey) && e.keyCode === (e.shiftKey ? KEYCODE_Z : KEYCODE_Y);
}
exports.isRedo = isRedo;
function getSelection(el) {
    let start, end;
    if (el.selectionStart !== undefined) {
        start = el.selectionStart;
        end = el.selectionEnd;
    }
    else {
        try {
            el.focus();
            // @ts-ignore (IE only)
            let rangeEl = el.createTextRange();
            let clone = rangeEl.duplicate();
            // @ts-ignore (IE only)
            rangeEl.moveToBookmark(document.selection.createRange().getBookmark());
            clone.setEndPoint('EndToStart', rangeEl);
            start = clone.text.length;
            end = start + rangeEl.text.length;
        }
        catch (e) {
            /* not focused or not visible */
        }
    }
    return { start, end };
}
exports.getSelection = getSelection;
function setSelection(el, selection) {
    try {
        if (el.selectionStart !== undefined) {
            el.focus();
            el.setSelectionRange(selection.start, selection.end);
        }
        else {
            el.focus();
            // @ts-ignore (IE only)
            let rangeEl = el.createTextRange();
            rangeEl.collapse(true);
            rangeEl.moveStart('character', selection.start);
            rangeEl.moveEnd('character', selection.end - selection.start);
            rangeEl.select();
        }
    }
    catch (e) {
        /* not focused or not visible */
    }
}
exports.setSelection = setSelection;
/**
 * Merge an object defining format characters into the defaults.
 * Passing null/undefined for en existing format character removes it.
 * Passing a definition for an existing format character overrides it.
 */
function mergeFormatCharacters(formatCharacters) {
    var merged = Object.assign({}, exports.DEFAULT_FORMAT_CHARACTERS);
    if (formatCharacters) {
        var chars = Object.keys(formatCharacters);
        for (var i = 0, l = chars.length; i < l; i++) {
            var char = chars[i];
            if (formatCharacters[char] == null) {
                delete merged[char];
            }
            else {
                merged[char] = formatCharacters[char];
            }
        }
    }
    return merged;
}
exports.mergeFormatCharacters = mergeFormatCharacters;
exports.ESCAPE_CHAR = '\\';
exports.DIGIT_RE = /^\d$/;
exports.LETTER_RE = /^[A-Za-z]$/;
exports.ALPHANNUMERIC_RE = /^[\dA-Za-z]$/;
exports.DEFAULT_PLACEHOLDER_CHAR = '_';
exports.DEFAULT_FORMAT_CHARACTERS = {
    '*': {
        validate: function (char) {
            return exports.ALPHANNUMERIC_RE.test(char);
        },
    },
    '1': {
        validate: function (char) {
            return exports.DIGIT_RE.test(char);
        },
    },
    a: {
        validate: function (char) {
            return exports.LETTER_RE.test(char);
        },
    },
    A: {
        validate: function (char) {
            return exports.LETTER_RE.test(char);
        },
        transform: function (char) {
            return char.toUpperCase();
        },
    },
    '#': {
        validate: function (char) {
            return exports.ALPHANNUMERIC_RE.test(char);
        },
        transform: function (char) {
            return char.toUpperCase();
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQztBQUNuQixJQUFJLFNBQVMsR0FBRyxFQUFFLENBQUM7QUFFbkIsU0FBZ0IsTUFBTSxDQUFDLENBQWdCO0lBQ3JDLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUN4RixDQUFDO0FBRkQsd0JBRUM7QUFFRCxTQUFnQixNQUFNLENBQUMsQ0FBZ0I7SUFDckMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3hGLENBQUM7QUFGRCx3QkFFQztBQUlELFNBQWdCLFlBQVksQ0FBQyxFQUFvQjtJQUMvQyxJQUFJLEtBQUssRUFBRSxHQUFHLENBQUM7SUFDZixJQUFJLEVBQUUsQ0FBQyxjQUFjLEtBQUssU0FBUyxFQUFFO1FBQ25DLEtBQUssR0FBRyxFQUFFLENBQUMsY0FBYyxDQUFDO1FBQzFCLEdBQUcsR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDO0tBQ3ZCO1NBQU07UUFDTCxJQUFJO1lBQ0YsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ1gsdUJBQXVCO1lBQ3ZCLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQyxlQUFlLEVBQUUsQ0FBQztZQUNuQyxJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsU0FBUyxFQUFFLENB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